{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/josetannous/dev/_Progress/magic-mind/utils/ActiveLink.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\n\nconst ActiveLink = (_ref) => {\n  let {\n    router,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"router\", \"children\"]);\n\n  const child = Children.only(children);\n  let className = child.props.className || '';\n\n  if (router.pathname === props.href && props.activeClassName) {\n    className = `${className} ${props.activeClassName}`.trim();\n  }\n\n  delete props.activeClassName;\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/React.cloneElement(child, {\n      className\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\nexport default withRouter(ActiveLink);","map":{"version":3,"sources":["/Users/josetannous/dev/_Progress/magic-mind/utils/ActiveLink.js"],"names":["withRouter","Link","React","Children","ActiveLink","router","children","props","child","only","className","pathname","href","activeClassName","trim","cloneElement"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAmC;AAAA,MAAZC,KAAY;;AACnD,QAAMC,KAAK,GAAGL,QAAQ,CAACM,IAAT,CAAcH,QAAd,CAAd;AAEA,MAAII,SAAS,GAAGF,KAAK,CAACD,KAAN,CAAYG,SAAZ,IAAyB,EAAzC;;AACA,MAAIL,MAAM,CAACM,QAAP,KAAoBJ,KAAK,CAACK,IAA1B,IAAkCL,KAAK,CAACM,eAA5C,EAA6D;AACzDH,IAAAA,SAAS,GAAI,GAAEA,SAAU,IAAGH,KAAK,CAACM,eAAgB,EAAtC,CAAwCC,IAAxC,EAAZ;AACH;;AAED,SAAOP,KAAK,CAACM,eAAb;AAEA,sBAAO,QAAC,IAAD,kCAAUN,KAAV;AAAA,2BAAkBL,KAAK,CAACa,YAAN,CAAmBP,KAAnB,EAA0B;AAAEE,MAAAA;AAAF,KAA1B;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAXD;;AAaA,eAAeV,UAAU,CAACI,UAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport React, { Children } from 'react';\r\n\r\nconst ActiveLink = ({ router, children, ...props }) => {\r\n    const child = Children.only(children);\r\n\r\n    let className = child.props.className || '';\r\n    if (router.pathname === props.href && props.activeClassName) {\r\n        className = `${className} ${props.activeClassName}`.trim();\r\n    }\r\n\r\n    delete props.activeClassName;\r\n\r\n    return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\r\n};\r\n\r\nexport default withRouter(ActiveLink);"]},"metadata":{},"sourceType":"module"}